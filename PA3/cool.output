Terminals unused in grammar

   ERROR


State 11 conflicts: 1 shift/reduce
State 19 conflicts: 1 shift/reduce
State 126 conflicts: 9 shift/reduce
State 154 conflicts: 9 shift/reduce
State 166 conflicts: 9 shift/reduce


Grammar

    0 $accept: program $end

    1 program: class_list

    2 class_list: class
    3           | class_list class
    4           | error ';'

    5 class: CLASS TYPEID '{' feature_list '}' ';'
    6      | CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    7 feature_list: feature
    8             | feature_list feature
    9             | %empty
   10             | error ';'

   11 feature: attribute
   12        | method

   13 attribute: OBJECTID ':' TYPEID ';'
   14          | OBJECTID ':' TYPEID ASSIGN expression ';'

   15 method: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}' ';'
   16       | OBJECTID '(' ')' ':' TYPEID '{' expression '}' ';'

   17 formal_list: formal
   18            | formal_list ',' formal

   19 formal: OBJECTID ':' TYPEID

   20 semicolon_expression_list: expression ';'
   21                          | semicolon_expression_list expression ';'
   22                          | error ';'

   23 comma_expression_list: expression
   24                      | comma_expression_list ',' expression
   25                      | %empty

   26 expression: '(' expression ')'
   27           | constant
   28           | identifier
   29           | assignment
   30           | dispatch
   31           | conditional
   32           | loop
   33           | block
   34           | let_expr
   35           | case_expr
   36           | new
   37           | isvoid
   38           | comparison
   39           | arithmetic

   40 constant: BOOL_CONST
   41         | STR_CONST
   42         | INT_CONST

   43 identifier: OBJECTID

   44 assignment: OBJECTID ASSIGN expression

   45 dispatch: expression '.' OBJECTID '(' comma_expression_list ')'
   46         | OBJECTID '(' comma_expression_list ')'
   47         | expression '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'

   48 conditional: IF expression THEN expression ELSE expression FI

   49 loop: WHILE expression LOOP expression POOL

   50 block: '{' semicolon_expression_list '}'

   51 let_expr: LET let

   52 let: OBJECTID ':' TYPEID IN expression
   53    | OBJECTID ':' TYPEID ASSIGN expression IN expression
   54    | error IN expression
   55    | OBJECTID ':' TYPEID ',' let
   56    | OBJECTID ':' TYPEID ASSIGN expression ',' let
   57    | error ',' let

   58 case_expr: CASE expression OF case_list ESAC

   59 case_list: case
   60          | case_list case

   61 case: OBJECTID ':' TYPEID DARROW expression ';'

   62 new: NEW TYPEID

   63 isvoid: ISVOID expression

   64 comparison: expression '=' expression
   65           | expression '<' expression
   66           | expression LE expression

   67 arithmetic: NOT expression
   68           | '~' expression
   69           | expression '+' expression
   70           | expression '-' expression
   71           | expression '*' expression
   72           | expression '/' expression


Terminals, with rules where they appear

$end (0) 0
'(' (40) 15 16 26 45 46 47
')' (41) 15 16 26 45 46 47
'*' (42) 71
'+' (43) 69
',' (44) 18 24 55 56 57
'-' (45) 70
'.' (46) 45 47
'/' (47) 72
':' (58) 13 14 15 16 19 52 53 55 56 61
';' (59) 4 5 6 10 13 14 15 16 20 21 22 61
'<' (60) 65
'=' (61) 64
'@' (64) 47
'{' (123) 5 6 15 16 50
'}' (125) 5 6 15 16 50
'~' (126) 68
error (256) 4 10 22 54 57
CLASS (258) 5 6
ELSE (259) 48
FI (260) 48
IF (261) 48
IN (262) 52 53 54
INHERITS (263) 6
LET (264) 51
LOOP (265) 49
POOL (266) 49
THEN (267) 48
WHILE (268) 49
CASE (269) 58
ESAC (270) 58
OF (271) 58
DARROW (272) 61
NEW (273) 62
ISVOID (274) 63
STR_CONST (275) 41
INT_CONST (276) 42
BOOL_CONST (277) 40
TYPEID (278) 5 6 13 14 15 16 19 47 52 53 55 56 61 62
OBJECTID (279) 13 14 15 16 19 43 44 45 46 47 52 53 55 56 61
ASSIGN (280) 14 44 53 56
NOT (281) 67
LE (282) 66
ERROR (283)


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
program (46)
    on left: 1, on right: 0
class_list (47)
    on left: 2 3 4, on right: 1 3
class (48)
    on left: 5 6, on right: 2 3
feature_list (49)
    on left: 7 8 9 10, on right: 5 6 8
feature (50)
    on left: 11 12, on right: 7 8
attribute (51)
    on left: 13 14, on right: 11
method (52)
    on left: 15 16, on right: 12
formal_list (53)
    on left: 17 18, on right: 15 18
formal (54)
    on left: 19, on right: 17 18
semicolon_expression_list (55)
    on left: 20 21 22, on right: 21 50
comma_expression_list (56)
    on left: 23 24 25, on right: 24 45 46 47
expression (57)
    on left: 26 27 28 29 30 31 32 33 34 35 36 37 38 39, on right: 14
    15 16 20 21 23 24 26 44 45 47 48 49 52 53 54 56 58 61 63 64 65
    66 67 68 69 70 71 72
constant (58)
    on left: 40 41 42, on right: 27
identifier (59)
    on left: 43, on right: 28
assignment (60)
    on left: 44, on right: 29
dispatch (61)
    on left: 45 46 47, on right: 30
conditional (62)
    on left: 48, on right: 31
loop (63)
    on left: 49, on right: 32
block (64)
    on left: 50, on right: 33
let_expr (65)
    on left: 51, on right: 34
let (66)
    on left: 52 53 54 55 56 57, on right: 51 55 56 57
case_expr (67)
    on left: 58, on right: 35
case_list (68)
    on left: 59 60, on right: 58 60
case (69)
    on left: 61, on right: 59 60
new (70)
    on left: 62, on right: 36
isvoid (71)
    on left: 63, on right: 37
comparison (72)
    on left: 64 65 66, on right: 38
arithmetic (73)
    on left: 67 68 69 70 71 72, on right: 39


State 0

    0 $accept: . program $end

    error  shift, and go to state 1
    CLASS  shift, and go to state 2

    program     go to state 3
    class_list  go to state 4
    class       go to state 5


State 1

    4 class_list: error . ';'

    ';'  shift, and go to state 6


State 2

    5 class: CLASS . TYPEID '{' feature_list '}' ';'
    6      | CLASS . TYPEID INHERITS TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 7


State 3

    0 $accept: program . $end

    $end  shift, and go to state 8


State 4

    1 program: class_list .
    3 class_list: class_list . class

    CLASS  shift, and go to state 2

    $default  reduce using rule 1 (program)

    class  go to state 9


State 5

    2 class_list: class .

    $default  reduce using rule 2 (class_list)


State 6

    4 class_list: error ';' .

    $default  reduce using rule 4 (class_list)


State 7

    5 class: CLASS TYPEID . '{' feature_list '}' ';'
    6      | CLASS TYPEID . INHERITS TYPEID '{' feature_list '}' ';'

    INHERITS  shift, and go to state 10
    '{'       shift, and go to state 11


State 8

    0 $accept: program $end .

    $default  accept


State 9

    3 class_list: class_list class .

    $default  reduce using rule 3 (class_list)


State 10

    6 class: CLASS TYPEID INHERITS . TYPEID '{' feature_list '}' ';'

    TYPEID  shift, and go to state 12


State 11

    5 class: CLASS TYPEID '{' . feature_list '}' ';'

    error     shift, and go to state 13
    OBJECTID  shift, and go to state 14

    OBJECTID  [reduce using rule 9 (feature_list)]
    '}'       reduce using rule 9 (feature_list)

    feature_list  go to state 15
    feature       go to state 16
    attribute     go to state 17
    method        go to state 18


State 12

    6 class: CLASS TYPEID INHERITS TYPEID . '{' feature_list '}' ';'

    '{'  shift, and go to state 19


State 13

   10 feature_list: error . ';'

    ';'  shift, and go to state 20


State 14

   13 attribute: OBJECTID . ':' TYPEID ';'
   14          | OBJECTID . ':' TYPEID ASSIGN expression ';'
   15 method: OBJECTID . '(' formal_list ')' ':' TYPEID '{' expression '}' ';'
   16       | OBJECTID . '(' ')' ':' TYPEID '{' expression '}' ';'

    ':'  shift, and go to state 21
    '('  shift, and go to state 22


State 15

    5 class: CLASS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature

    OBJECTID  shift, and go to state 14
    '}'       shift, and go to state 23

    feature    go to state 24
    attribute  go to state 17
    method     go to state 18


State 16

    7 feature_list: feature .

    $default  reduce using rule 7 (feature_list)


State 17

   11 feature: attribute .

    $default  reduce using rule 11 (feature)


State 18

   12 feature: method .

    $default  reduce using rule 12 (feature)


State 19

    6 class: CLASS TYPEID INHERITS TYPEID '{' . feature_list '}' ';'

    error     shift, and go to state 13
    OBJECTID  shift, and go to state 14

    OBJECTID  [reduce using rule 9 (feature_list)]
    '}'       reduce using rule 9 (feature_list)

    feature_list  go to state 25
    feature       go to state 16
    attribute     go to state 17
    method        go to state 18


State 20

   10 feature_list: error ';' .

    $default  reduce using rule 10 (feature_list)


State 21

   13 attribute: OBJECTID ':' . TYPEID ';'
   14          | OBJECTID ':' . TYPEID ASSIGN expression ';'

    TYPEID  shift, and go to state 26


State 22

   15 method: OBJECTID '(' . formal_list ')' ':' TYPEID '{' expression '}' ';'
   16       | OBJECTID '(' . ')' ':' TYPEID '{' expression '}' ';'

    OBJECTID  shift, and go to state 27
    ')'       shift, and go to state 28

    formal_list  go to state 29
    formal       go to state 30


State 23

    5 class: CLASS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 31


State 24

    8 feature_list: feature_list feature .

    $default  reduce using rule 8 (feature_list)


State 25

    6 class: CLASS TYPEID INHERITS TYPEID '{' feature_list . '}' ';'
    8 feature_list: feature_list . feature

    OBJECTID  shift, and go to state 14
    '}'       shift, and go to state 32

    feature    go to state 24
    attribute  go to state 17
    method     go to state 18


State 26

   13 attribute: OBJECTID ':' TYPEID . ';'
   14          | OBJECTID ':' TYPEID . ASSIGN expression ';'

    ASSIGN  shift, and go to state 33
    ';'     shift, and go to state 34


State 27

   19 formal: OBJECTID . ':' TYPEID

    ':'  shift, and go to state 35


State 28

   16 method: OBJECTID '(' ')' . ':' TYPEID '{' expression '}' ';'

    ':'  shift, and go to state 36


State 29

   15 method: OBJECTID '(' formal_list . ')' ':' TYPEID '{' expression '}' ';'
   18 formal_list: formal_list . ',' formal

    ')'  shift, and go to state 37
    ','  shift, and go to state 38


State 30

   17 formal_list: formal .

    $default  reduce using rule 17 (formal_list)


State 31

    5 class: CLASS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 5 (class)


State 32

    6 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' . ';'

    ';'  shift, and go to state 39


State 33

   14 attribute: OBJECTID ':' TYPEID ASSIGN . expression ';'

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 54
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 34

   13 attribute: OBJECTID ':' TYPEID ';' .

    $default  reduce using rule 13 (attribute)


State 35

   19 formal: OBJECTID ':' . TYPEID

    TYPEID  shift, and go to state 68


State 36

   16 method: OBJECTID '(' ')' ':' . TYPEID '{' expression '}' ';'

    TYPEID  shift, and go to state 69


State 37

   15 method: OBJECTID '(' formal_list ')' . ':' TYPEID '{' expression '}' ';'

    ':'  shift, and go to state 70


State 38

   18 formal_list: formal_list ',' . formal

    OBJECTID  shift, and go to state 27

    formal  go to state 71


State 39

    6 class: CLASS TYPEID INHERITS TYPEID '{' feature_list '}' ';' .

    $default  reduce using rule 6 (class)


State 40

   48 conditional: IF . expression THEN expression ELSE expression FI

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 72
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 41

   51 let_expr: LET . let

    error     shift, and go to state 73
    OBJECTID  shift, and go to state 74

    let  go to state 75


State 42

   49 loop: WHILE . expression LOOP expression POOL

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 76
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 43

   58 case_expr: CASE . expression OF case_list ESAC

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 77
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 44

   62 new: NEW . TYPEID

    TYPEID  shift, and go to state 78


State 45

   63 isvoid: ISVOID . expression

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 79
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 46

   41 constant: STR_CONST .

    $default  reduce using rule 41 (constant)


State 47

   42 constant: INT_CONST .

    $default  reduce using rule 42 (constant)


State 48

   40 constant: BOOL_CONST .

    $default  reduce using rule 40 (constant)


State 49

   43 identifier: OBJECTID .
   44 assignment: OBJECTID . ASSIGN expression
   46 dispatch: OBJECTID . '(' comma_expression_list ')'

    ASSIGN  shift, and go to state 80
    '('     shift, and go to state 81

    $default  reduce using rule 43 (identifier)


State 50

   67 arithmetic: NOT . expression

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 82
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 51

   68 arithmetic: '~' . expression

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 83
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 52

   50 block: '{' . semicolon_expression_list '}'

    error       shift, and go to state 84
    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    semicolon_expression_list  go to state 85
    expression                 go to state 86
    constant                   go to state 55
    identifier                 go to state 56
    assignment                 go to state 57
    dispatch                   go to state 58
    conditional                go to state 59
    loop                       go to state 60
    block                      go to state 61
    let_expr                   go to state 62
    case_expr                  go to state 63
    new                        go to state 64
    isvoid                     go to state 65
    comparison                 go to state 66
    arithmetic                 go to state 67


State 53

   26 expression: '(' . expression ')'

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 87
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 54

   14 attribute: OBJECTID ':' TYPEID ASSIGN expression . ';'
   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    LE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96
    ';'  shift, and go to state 97


State 55

   27 expression: constant .

    $default  reduce using rule 27 (expression)


State 56

   28 expression: identifier .

    $default  reduce using rule 28 (expression)


State 57

   29 expression: assignment .

    $default  reduce using rule 29 (expression)


State 58

   30 expression: dispatch .

    $default  reduce using rule 30 (expression)


State 59

   31 expression: conditional .

    $default  reduce using rule 31 (expression)


State 60

   32 expression: loop .

    $default  reduce using rule 32 (expression)


State 61

   33 expression: block .

    $default  reduce using rule 33 (expression)


State 62

   34 expression: let_expr .

    $default  reduce using rule 34 (expression)


State 63

   35 expression: case_expr .

    $default  reduce using rule 35 (expression)


State 64

   36 expression: new .

    $default  reduce using rule 36 (expression)


State 65

   37 expression: isvoid .

    $default  reduce using rule 37 (expression)


State 66

   38 expression: comparison .

    $default  reduce using rule 38 (expression)


State 67

   39 expression: arithmetic .

    $default  reduce using rule 39 (expression)


State 68

   19 formal: OBJECTID ':' TYPEID .

    $default  reduce using rule 19 (formal)


State 69

   16 method: OBJECTID '(' ')' ':' TYPEID . '{' expression '}' ';'

    '{'  shift, and go to state 98


State 70

   15 method: OBJECTID '(' formal_list ')' ':' . TYPEID '{' expression '}' ';'

    TYPEID  shift, and go to state 99


State 71

   18 formal_list: formal_list ',' formal .

    $default  reduce using rule 18 (formal_list)


State 72

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   48 conditional: IF expression . THEN expression ELSE expression FI
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    THEN  shift, and go to state 100
    LE    shift, and go to state 88
    '<'   shift, and go to state 89
    '='   shift, and go to state 90
    '+'   shift, and go to state 91
    '-'   shift, and go to state 92
    '*'   shift, and go to state 93
    '/'   shift, and go to state 94
    '@'   shift, and go to state 95
    '.'   shift, and go to state 96


State 73

   54 let: error . IN expression
   57    | error . ',' let

    IN   shift, and go to state 101
    ','  shift, and go to state 102


State 74

   52 let: OBJECTID . ':' TYPEID IN expression
   53    | OBJECTID . ':' TYPEID ASSIGN expression IN expression
   55    | OBJECTID . ':' TYPEID ',' let
   56    | OBJECTID . ':' TYPEID ASSIGN expression ',' let

    ':'  shift, and go to state 103


State 75

   51 let_expr: LET let .

    $default  reduce using rule 51 (let_expr)


State 76

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   49 loop: WHILE expression . LOOP expression POOL
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    LOOP  shift, and go to state 104
    LE    shift, and go to state 88
    '<'   shift, and go to state 89
    '='   shift, and go to state 90
    '+'   shift, and go to state 91
    '-'   shift, and go to state 92
    '*'   shift, and go to state 93
    '/'   shift, and go to state 94
    '@'   shift, and go to state 95
    '.'   shift, and go to state 96


State 77

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   58 case_expr: CASE expression . OF case_list ESAC
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    OF   shift, and go to state 105
    LE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96


State 78

   62 new: NEW TYPEID .

    $default  reduce using rule 62 (new)


State 79

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   63 isvoid: ISVOID expression .
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    '@'  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 63 (isvoid)


State 80

   44 assignment: OBJECTID ASSIGN . expression

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 106
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 81

   46 dispatch: OBJECTID '(' . comma_expression_list ')'

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    $default  reduce using rule 25 (comma_expression_list)

    comma_expression_list  go to state 107
    expression             go to state 108
    constant               go to state 55
    identifier             go to state 56
    assignment             go to state 57
    dispatch               go to state 58
    conditional            go to state 59
    loop                   go to state 60
    block                  go to state 61
    let_expr               go to state 62
    case_expr              go to state 63
    new                    go to state 64
    isvoid                 go to state 65
    comparison             go to state 66
    arithmetic             go to state 67


State 82

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   67 arithmetic: NOT expression .
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    LE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 67 (arithmetic)


State 83

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   68 arithmetic: '~' expression .
   69           | expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    '@'  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 68 (arithmetic)


State 84

   22 semicolon_expression_list: error . ';'

    ';'  shift, and go to state 109


State 85

   21 semicolon_expression_list: semicolon_expression_list . expression ';'
   50 block: '{' semicolon_expression_list . '}'

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '}'         shift, and go to state 110
    '('         shift, and go to state 53

    expression   go to state 111
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 86

   20 semicolon_expression_list: expression . ';'
   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    LE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96
    ';'  shift, and go to state 112


State 87

   26 expression: '(' expression . ')'
   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    LE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96
    ')'  shift, and go to state 113


State 88

   66 comparison: expression LE . expression

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 114
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 89

   65 comparison: expression '<' . expression

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 115
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 90

   64 comparison: expression '=' . expression

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 116
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 91

   69 arithmetic: expression '+' . expression

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 117
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 92

   70 arithmetic: expression '-' . expression

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 118
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 93

   71 arithmetic: expression '*' . expression

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 119
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 94

   72 arithmetic: expression '/' . expression

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 120
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 95

   47 dispatch: expression '@' . TYPEID '.' OBJECTID '(' comma_expression_list ')'

    TYPEID  shift, and go to state 121


State 96

   45 dispatch: expression '.' . OBJECTID '(' comma_expression_list ')'

    OBJECTID  shift, and go to state 122


State 97

   14 attribute: OBJECTID ':' TYPEID ASSIGN expression ';' .

    $default  reduce using rule 14 (attribute)


State 98

   16 method: OBJECTID '(' ')' ':' TYPEID '{' . expression '}' ';'

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 123
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 99

   15 method: OBJECTID '(' formal_list ')' ':' TYPEID . '{' expression '}' ';'

    '{'  shift, and go to state 124


State 100

   48 conditional: IF expression THEN . expression ELSE expression FI

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 125
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 101

   54 let: error IN . expression

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 126
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 102

   57 let: error ',' . let

    error     shift, and go to state 73
    OBJECTID  shift, and go to state 74

    let  go to state 127


State 103

   52 let: OBJECTID ':' . TYPEID IN expression
   53    | OBJECTID ':' . TYPEID ASSIGN expression IN expression
   55    | OBJECTID ':' . TYPEID ',' let
   56    | OBJECTID ':' . TYPEID ASSIGN expression ',' let

    TYPEID  shift, and go to state 128


State 104

   49 loop: WHILE expression LOOP . expression POOL

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 129
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 105

   58 case_expr: CASE expression OF . case_list ESAC

    OBJECTID  shift, and go to state 130

    case_list  go to state 131
    case       go to state 132


State 106

   44 assignment: OBJECTID ASSIGN expression .
   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    LE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 44 (assignment)


State 107

   24 comma_expression_list: comma_expression_list . ',' expression
   46 dispatch: OBJECTID '(' comma_expression_list . ')'

    ')'  shift, and go to state 133
    ','  shift, and go to state 134


State 108

   23 comma_expression_list: expression .
   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    LE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 23 (comma_expression_list)


State 109

   22 semicolon_expression_list: error ';' .

    $default  reduce using rule 22 (semicolon_expression_list)


State 110

   50 block: '{' semicolon_expression_list '}' .

    $default  reduce using rule 50 (block)


State 111

   21 semicolon_expression_list: semicolon_expression_list expression . ';'
   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    LE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96
    ';'  shift, and go to state 135


State 112

   20 semicolon_expression_list: expression ';' .

    $default  reduce using rule 20 (semicolon_expression_list)


State 113

   26 expression: '(' expression ')' .

    $default  reduce using rule 26 (expression)


State 114

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   66           | expression LE expression .
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 66 (comparison)


State 115

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   65           | expression '<' expression .
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 65 (comparison)


State 116

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   64 comparison: expression . '=' expression
   64           | expression '=' expression .
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96

    LE   error (nonassociative)
    '<'  error (nonassociative)
    '='  error (nonassociative)

    $default  reduce using rule 64 (comparison)


State 117

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   69           | expression '+' expression .
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 69 (arithmetic)


State 118

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   70           | expression '-' expression .
   71           | expression . '*' expression
   72           | expression . '/' expression

    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 70 (arithmetic)


State 119

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   71           | expression '*' expression .
   72           | expression . '/' expression

    '@'  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 71 (arithmetic)


State 120

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression
   72           | expression '/' expression .

    '@'  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 72 (arithmetic)


State 121

   47 dispatch: expression '@' TYPEID . '.' OBJECTID '(' comma_expression_list ')'

    '.'  shift, and go to state 136


State 122

   45 dispatch: expression '.' OBJECTID . '(' comma_expression_list ')'

    '('  shift, and go to state 137


State 123

   16 method: OBJECTID '(' ')' ':' TYPEID '{' expression . '}' ';'
   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    LE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96
    '}'  shift, and go to state 138


State 124

   15 method: OBJECTID '(' formal_list ')' ':' TYPEID '{' . expression '}' ';'

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 139
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 125

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   48 conditional: IF expression THEN expression . ELSE expression FI
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    ELSE  shift, and go to state 140
    LE    shift, and go to state 88
    '<'   shift, and go to state 89
    '='   shift, and go to state 90
    '+'   shift, and go to state 91
    '-'   shift, and go to state 92
    '*'   shift, and go to state 93
    '/'   shift, and go to state 94
    '@'   shift, and go to state 95
    '.'   shift, and go to state 96


State 126

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   54 let: error IN expression .
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    LE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96

    LE        [reduce using rule 54 (let)]
    '<'       [reduce using rule 54 (let)]
    '='       [reduce using rule 54 (let)]
    '+'       [reduce using rule 54 (let)]
    '-'       [reduce using rule 54 (let)]
    '*'       [reduce using rule 54 (let)]
    '/'       [reduce using rule 54 (let)]
    '@'       [reduce using rule 54 (let)]
    '.'       [reduce using rule 54 (let)]
    $default  reduce using rule 54 (let)


State 127

   57 let: error ',' let .

    $default  reduce using rule 57 (let)


State 128

   52 let: OBJECTID ':' TYPEID . IN expression
   53    | OBJECTID ':' TYPEID . ASSIGN expression IN expression
   55    | OBJECTID ':' TYPEID . ',' let
   56    | OBJECTID ':' TYPEID . ASSIGN expression ',' let

    IN      shift, and go to state 141
    ASSIGN  shift, and go to state 142
    ','     shift, and go to state 143


State 129

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   49 loop: WHILE expression LOOP expression . POOL
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    POOL  shift, and go to state 144
    LE    shift, and go to state 88
    '<'   shift, and go to state 89
    '='   shift, and go to state 90
    '+'   shift, and go to state 91
    '-'   shift, and go to state 92
    '*'   shift, and go to state 93
    '/'   shift, and go to state 94
    '@'   shift, and go to state 95
    '.'   shift, and go to state 96


State 130

   61 case: OBJECTID . ':' TYPEID DARROW expression ';'

    ':'  shift, and go to state 145


State 131

   58 case_expr: CASE expression OF case_list . ESAC
   60 case_list: case_list . case

    ESAC      shift, and go to state 146
    OBJECTID  shift, and go to state 130

    case  go to state 147


State 132

   59 case_list: case .

    $default  reduce using rule 59 (case_list)


State 133

   46 dispatch: OBJECTID '(' comma_expression_list ')' .

    $default  reduce using rule 46 (dispatch)


State 134

   24 comma_expression_list: comma_expression_list ',' . expression

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 148
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 135

   21 semicolon_expression_list: semicolon_expression_list expression ';' .

    $default  reduce using rule 21 (semicolon_expression_list)


State 136

   47 dispatch: expression '@' TYPEID '.' . OBJECTID '(' comma_expression_list ')'

    OBJECTID  shift, and go to state 149


State 137

   45 dispatch: expression '.' OBJECTID '(' . comma_expression_list ')'

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    $default  reduce using rule 25 (comma_expression_list)

    comma_expression_list  go to state 150
    expression             go to state 108
    constant               go to state 55
    identifier             go to state 56
    assignment             go to state 57
    dispatch               go to state 58
    conditional            go to state 59
    loop                   go to state 60
    block                  go to state 61
    let_expr               go to state 62
    case_expr              go to state 63
    new                    go to state 64
    isvoid                 go to state 65
    comparison             go to state 66
    arithmetic             go to state 67


State 138

   16 method: OBJECTID '(' ')' ':' TYPEID '{' expression '}' . ';'

    ';'  shift, and go to state 151


State 139

   15 method: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression . '}' ';'
   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    LE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96
    '}'  shift, and go to state 152


State 140

   48 conditional: IF expression THEN expression ELSE . expression FI

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 153
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 141

   52 let: OBJECTID ':' TYPEID IN . expression

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 154
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 142

   53 let: OBJECTID ':' TYPEID ASSIGN . expression IN expression
   56    | OBJECTID ':' TYPEID ASSIGN . expression ',' let

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 155
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 143

   55 let: OBJECTID ':' TYPEID ',' . let

    error     shift, and go to state 73
    OBJECTID  shift, and go to state 74

    let  go to state 156


State 144

   49 loop: WHILE expression LOOP expression POOL .

    $default  reduce using rule 49 (loop)


State 145

   61 case: OBJECTID ':' . TYPEID DARROW expression ';'

    TYPEID  shift, and go to state 157


State 146

   58 case_expr: CASE expression OF case_list ESAC .

    $default  reduce using rule 58 (case_expr)


State 147

   60 case_list: case_list case .

    $default  reduce using rule 60 (case_list)


State 148

   24 comma_expression_list: comma_expression_list ',' expression .
   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    LE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96

    $default  reduce using rule 24 (comma_expression_list)


State 149

   47 dispatch: expression '@' TYPEID '.' OBJECTID . '(' comma_expression_list ')'

    '('  shift, and go to state 158


State 150

   24 comma_expression_list: comma_expression_list . ',' expression
   45 dispatch: expression '.' OBJECTID '(' comma_expression_list . ')'

    ')'  shift, and go to state 159
    ','  shift, and go to state 134


State 151

   16 method: OBJECTID '(' ')' ':' TYPEID '{' expression '}' ';' .

    $default  reduce using rule 16 (method)


State 152

   15 method: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}' . ';'

    ';'  shift, and go to state 160


State 153

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   48 conditional: IF expression THEN expression ELSE expression . FI
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    FI   shift, and go to state 161
    LE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96


State 154

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   52 let: OBJECTID ':' TYPEID IN expression .
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    LE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96

    LE        [reduce using rule 52 (let)]
    '<'       [reduce using rule 52 (let)]
    '='       [reduce using rule 52 (let)]
    '+'       [reduce using rule 52 (let)]
    '-'       [reduce using rule 52 (let)]
    '*'       [reduce using rule 52 (let)]
    '/'       [reduce using rule 52 (let)]
    '@'       [reduce using rule 52 (let)]
    '.'       [reduce using rule 52 (let)]
    $default  reduce using rule 52 (let)


State 155

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   53 let: OBJECTID ':' TYPEID ASSIGN expression . IN expression
   56    | OBJECTID ':' TYPEID ASSIGN expression . ',' let
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    IN   shift, and go to state 162
    LE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96
    ','  shift, and go to state 163


State 156

   55 let: OBJECTID ':' TYPEID ',' let .

    $default  reduce using rule 55 (let)


State 157

   61 case: OBJECTID ':' TYPEID . DARROW expression ';'

    DARROW  shift, and go to state 164


State 158

   47 dispatch: expression '@' TYPEID '.' OBJECTID '(' . comma_expression_list ')'

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    $default  reduce using rule 25 (comma_expression_list)

    comma_expression_list  go to state 165
    expression             go to state 108
    constant               go to state 55
    identifier             go to state 56
    assignment             go to state 57
    dispatch               go to state 58
    conditional            go to state 59
    loop                   go to state 60
    block                  go to state 61
    let_expr               go to state 62
    case_expr              go to state 63
    new                    go to state 64
    isvoid                 go to state 65
    comparison             go to state 66
    arithmetic             go to state 67


State 159

   45 dispatch: expression '.' OBJECTID '(' comma_expression_list ')' .

    $default  reduce using rule 45 (dispatch)


State 160

   15 method: OBJECTID '(' formal_list ')' ':' TYPEID '{' expression '}' ';' .

    $default  reduce using rule 15 (method)


State 161

   48 conditional: IF expression THEN expression ELSE expression FI .

    $default  reduce using rule 48 (conditional)


State 162

   53 let: OBJECTID ':' TYPEID ASSIGN expression IN . expression

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 166
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 163

   56 let: OBJECTID ':' TYPEID ASSIGN expression ',' . let

    error     shift, and go to state 73
    OBJECTID  shift, and go to state 74

    let  go to state 167


State 164

   61 case: OBJECTID ':' TYPEID DARROW . expression ';'

    IF          shift, and go to state 40
    LET         shift, and go to state 41
    WHILE       shift, and go to state 42
    CASE        shift, and go to state 43
    NEW         shift, and go to state 44
    ISVOID      shift, and go to state 45
    STR_CONST   shift, and go to state 46
    INT_CONST   shift, and go to state 47
    BOOL_CONST  shift, and go to state 48
    OBJECTID    shift, and go to state 49
    NOT         shift, and go to state 50
    '~'         shift, and go to state 51
    '{'         shift, and go to state 52
    '('         shift, and go to state 53

    expression   go to state 168
    constant     go to state 55
    identifier   go to state 56
    assignment   go to state 57
    dispatch     go to state 58
    conditional  go to state 59
    loop         go to state 60
    block        go to state 61
    let_expr     go to state 62
    case_expr    go to state 63
    new          go to state 64
    isvoid       go to state 65
    comparison   go to state 66
    arithmetic   go to state 67


State 165

   24 comma_expression_list: comma_expression_list . ',' expression
   47 dispatch: expression '@' TYPEID '.' OBJECTID '(' comma_expression_list . ')'

    ')'  shift, and go to state 169
    ','  shift, and go to state 134


State 166

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   53 let: OBJECTID ':' TYPEID ASSIGN expression IN expression .
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    LE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96

    LE        [reduce using rule 53 (let)]
    '<'       [reduce using rule 53 (let)]
    '='       [reduce using rule 53 (let)]
    '+'       [reduce using rule 53 (let)]
    '-'       [reduce using rule 53 (let)]
    '*'       [reduce using rule 53 (let)]
    '/'       [reduce using rule 53 (let)]
    '@'       [reduce using rule 53 (let)]
    '.'       [reduce using rule 53 (let)]
    $default  reduce using rule 53 (let)


State 167

   56 let: OBJECTID ':' TYPEID ASSIGN expression ',' let .

    $default  reduce using rule 56 (let)


State 168

   45 dispatch: expression . '.' OBJECTID '(' comma_expression_list ')'
   47         | expression . '@' TYPEID '.' OBJECTID '(' comma_expression_list ')'
   61 case: OBJECTID ':' TYPEID DARROW expression . ';'
   64 comparison: expression . '=' expression
   65           | expression . '<' expression
   66           | expression . LE expression
   69 arithmetic: expression . '+' expression
   70           | expression . '-' expression
   71           | expression . '*' expression
   72           | expression . '/' expression

    LE   shift, and go to state 88
    '<'  shift, and go to state 89
    '='  shift, and go to state 90
    '+'  shift, and go to state 91
    '-'  shift, and go to state 92
    '*'  shift, and go to state 93
    '/'  shift, and go to state 94
    '@'  shift, and go to state 95
    '.'  shift, and go to state 96
    ';'  shift, and go to state 170


State 169

   47 dispatch: expression '@' TYPEID '.' OBJECTID '(' comma_expression_list ')' .

    $default  reduce using rule 47 (dispatch)


State 170

   61 case: OBJECTID ':' TYPEID DARROW expression ';' .

    $default  reduce using rule 61 (case)
